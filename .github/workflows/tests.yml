---
name: Tests

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/tests.yml
      - src/**
    branches: ['**']
  push:
    paths: [src/**]
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  unit-and-integration-tests:
    name: Run all unit- and integration-tests
    runs-on: ubuntu-20.04

    env:
      PROJECT_NAME_UNDERSCORE: themis
      CARGO_INCREMENTAL: 0

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.0.0

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Cache dependencies
        uses: actions/cache@v3.0.0
        env:
          cache-name: cache-dependencies
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.lock') }}

      - name: Generate the test result and coverage report
        run: |
          cargo install cargo2junit grcov rust-covfix
          cargo test -- -Z unstable-options --format json | cargo2junit >results.xml
          zip -0 ccov.zip "$(find . \( -name "${PROJECT_NAME_UNDERSCORE}*.gc*" \) -print)"

          grcov ccov.zip -s .     \
            -t lcov               \
            --llvm                \
            --ignore-not-existing \
            --ignore "/*"         \
            --ignore "tests/*"    \
            -o coverage.info

      - name: Upload test results
        uses: EnricoMi/publish-unit-test-result-action@v1.31
        with:
          check_name: Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: results.xml

      - name: Upload to CodeCov
        uses: codecov/codecov-action@v2.1.0
        with:
          # required for private repositories:
          # token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.info
          flags: unittests
          fail_ci_if_error: true
          verbose: false
